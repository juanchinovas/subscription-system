
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: subscriptionSystem
  AZURE_WEBAPP_PACKAGE_PATH: '.'
  NODE_VERSION: '18.x'

permissions:
  contents: read
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'yarn'

    - name: yarn install
      run: |
        yarn install

    - name: yarn build
      run: |
        yarn build

    - name: yarn lint
      run: |
        yarn lint

    - name: yarn test
      run: |
        yarn test
    
    - name: Writing .env file
      uses: javajawa/create-envfile@v1
      with:
        file_name: .env
        envkey_DB_USERNAME: '${{ secrets.DB_USERNAME }}'
        envkey_DB_PASSWORD: '${{ secrets.DB_PASSWORD }}'
        envkey_DB_DATA_DIR: '${{ secrets.DB_DATA_DIR }}'
        envkey_MQ_USERNAME: '${{ secrets.MQ_USERNAME }}'
        envkey_MQ_PASSWORD: '${{ secrets.MQ_PASSWORD }}'
        envkey_CACHE_TTL: '${{ secrets.CACHE_TTL }}'

    - name: Compressing the files
      run: tar -cvf backup.tar pacackes/** script/ .env package.json yarn.lock dockerignore docker-compose.yml .gitignore  .eslintrc.json

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v3
      with:
        name: node-app
        path: backup.tar
        if-no-files-found: error
        retention-days: 1



  creating-images-and-deploy-to-azure:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download artifact for deployment job
      uses: actions/download-artifact@v3
      with:
        name: node-app
        path: .

    - name: Uncompressing the files
      run: tar -xvf backup.tar -C .

    - name: Get tag
      id: tag
      uses: dawidd6/action-get-tag@v1
  
    - name: Log into registry
      uses: docker/login-action@v1
      with:
        registry: ${{ secrets.ACR_ENDPOINT }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build & Push
      uses: docker/build-push-action@v2
      with:
        push: true
        build-args: |
          version=${{ steps.tag.outputs.tag }}
        tags: ${{ secrets.ACR_ENDPOINT }}/${{ env.IMAGE_NAME }}:${{ steps.tag.outputs.tag }}

    # - name: 'Az CLI login'
    #   uses: azure/login@v1
    #   with:
    #       creds: '${{ secrets.AZURE_CREDENTIALS }}'
  
    # - name: 'Run Azure CLI commands'
    #   run: |
    #       az account show
    #       az group list
    #       pwd 

  # deploy:
  #   permissions:
  #     contents: none
  #   runs-on: ubuntu-latest
  #   needs: build
  #   environment:
  #     name: 'Development'
  #     url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

  #   steps:
  #   - name: Download artifact from build job
  #     uses: actions/download-artifact@v3
  #     with:
  #       name: node-app

  #   - name: 'Deploy to Azure WebApp'
  #     id: deploy-to-webapp
  #     uses: azure/webapps-deploy@v2
  #     with:
  #       app-name: ${{ env.AZURE_WEBAPP_NAME }}
  #       publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
  #       package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
