
on:
  push:
    branches: [ "test_deploy" ]
  workflow_dispatch:

env:
  NODE_VERSION: '18.x'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'yarn'

    - name: yarn install
      run: |
        yarn install

    - name: yarn build
      run: |
        yarn build

    - name: yarn lint
      run: |
        yarn lint

    - name: yarn test
      run: |
        yarn test
    
    - name: Writing .env file
      uses: javajawa/create-envfile@v1
      with:
        file_name: .env
        envkey_DB_USERNAME: '${{ secrets.DB_USERNAME }}'
        envkey_DB_PASSWORD: '${{ secrets.DB_PASSWORD }}'
        envkey_DB_DATA_DIR: '${{ secrets.DB_DATA_DIR }}'
        envkey_MQ_USERNAME: '${{ secrets.MQ_USERNAME }}'
        envkey_MQ_PASSWORD: '${{ secrets.MQ_PASSWORD }}'
        envkey_CACHE_TTL: '${{ secrets.CACHE_TTL }}'

    - name: Uploading files
      uses: cross-the-world/ssh-scp-ssh-pipelines@latest
      with:
        host: ${{ secrets.DGOC_SSH_HOST }}
        key: ${{ secrets.DGOC_SSH_KEY }}
        user: ${{ secrets.DGOC_SSH_USER }}
        first_ssh: |
          mkdir -p /${{ secrets.DGOC_SSH_USER }}/subscription-system
        scp: |
          './packages/*' => "/${{ secrets.DGOC_SSH_USER }}/subscription-system/packages/"
          './scripts/*' => "/${{ secrets.DGOC_SSH_USER }}/subscription-system/scripts/"
          ./.env => "/${{ secrets.DGOC_SSH_USER }}/subscription-system/.env"
          ./docker-compose.yml => "/${{ secrets.DGOC_SSH_USER }}/subscription-system/docker-compose.yml"
          ./package.json => "/${{ secrets.DGOC_SSH_USER }}/subscription-system/package.json"
          ./yarn.lock => "/${{ secrets.DGOC_SSH_USER }}/subscription-system/yarn.lock"
          ./tsconfig.base.json => "/${{ secrets.DGOC_SSH_USER }}/subscription-system/tsconfig.base.json"
          ./.eslintrc.json => "/${{ secrets.DGOC_SSH_USER }}/subscription-system/.eslintrc.json"
        last_ssh: |
          ls -l /${{ secrets.DGOC_SSH_USER }}/subscription-system

    - name: Deploy services
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DGOC_SSH_HOST }}
        key: ${{ secrets.DGOC_SSH_KEY }}
        username: ${{ secrets.DGOC_SSH_USER }}
        script_stop: true
        script: |
            cd subscription-system
            docker compose up -d
            cd ..
            rm -fr subscription-system